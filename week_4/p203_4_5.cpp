#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>
using namespace std;

// 4√ó4 ÌçºÏ¶ê Îßµ
char puzzle[4][4] = {
    {'A', 'B', 'C', 'D'},
    {'E', 'F', 'G', 'H'},
    {'I', 'J', 'K', 'L'},
    {'M', 'N', 'O', ' '}
};

// ÌçºÏ¶ê ÏÑûÍ∏∞ Ìï®Ïàò
void shufflePuzzle() {
    srand(time(0));
    for (int i = 0; i < 100; i++) {
        int x = rand() % 4;
        int y = rand() % 4;
        int nx = rand() % 4;
        int ny = rand() % 4;
        swap(puzzle[x][y], puzzle[nx][ny]);
    }
}

// ÌçºÏ¶ê Ï∂úÎ†• Ìï®Ïàò
void printPuzzle() {
    cout << "\nÌçºÏ¶ê ÏÉÅÌÉú:\n";
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            cout << "[" << puzzle[i][j] << "] ";
        }
        cout << endl;
    }
}

// Îπà Ïπ∏(Í≥µÎ∞±)Ïùò ÏúÑÏπò Ï∞æÍ∏∞
pair<int, int> findEmptyTile() {
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            if (puzzle[i][j] == ' ') {
                return {i, j};
            }
        }
    }
    return {-1, -1}; // Ïò§Î•ò Î∞©ÏßÄÏö©
}

// ÌçºÏ¶ê Ï°∞Í∞Å Ïù¥Îèô Ìï®Ïàò
void moveTile(char move) {
    pair<int, int> empty = findEmptyTile();
    int x = empty.first;
    int y = empty.second;

    int nx = x, ny = y;

    if (move == 'W' && x > 0) nx--; // ÏúÑÎ°ú Ïù¥Îèô
    if (move == 'S' && x < 3) nx++; // ÏïÑÎûòÎ°ú Ïù¥Îèô
    if (move == 'A' && y > 0) ny--; // ÏôºÏ™Ω Ïù¥Îèô
    if (move == 'D' && y < 3) ny++; // Ïò§Î•∏Ï™Ω Ïù¥Îèô

    swap(puzzle[x][y], puzzle[nx][ny]);
}

// ÏõêÎûò ÏÉÅÌÉúÏù∏ÏßÄ ÌôïÏù∏
bool isSolved() {
    char goal[4][4] = {
        {'A', 'B', 'C', 'D'},
        {'E', 'F', 'G', 'H'},
        {'I', 'J', 'K', 'L'},
        {'M', 'N', 'O', ' '}
    };

    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            if (puzzle[i][j] != goal[i][j]) return false;
        }
    }
    return true;
}

// Í≤åÏûÑ Ïã§Ìñâ
void playGame() {
    shufflePuzzle(); // Í≤åÏûÑ ÏãúÏûë Ï†Ñ ÌçºÏ¶ê ÏÑûÍ∏∞
    printPuzzle();
    
    while (true) {
        cout << "WASDÎ°ú Ï°∞Í∞Å Ïù¥Îèô (Q: Ï¢ÖÎ£å): ";
        char move;
        cin >> move;
        if (move == 'Q' || move == 'q') break;

        moveTile(move);
        printPuzzle();

        if (isSolved()) {
            cout << "üéâ Ï∂ïÌïòÌï©ÎãàÎã§! ÌçºÏ¶êÏùÑ ÎßûÏ∑ÑÏäµÎãàÎã§! üéâ" << endl;
            break;
        }
    }
}

int main() {
    while (true) {
        cout << "1. Í∑∏Î¶º ÌçºÏ¶ê ÏãúÏûë\n2. Ï¢ÖÎ£å\nÏÑ†ÌÉù (1/2): ";
        int choice;
        cin >> choice;

        if (choice == 1) playGame();
        else if (choice == 2) {
            cout << "Í≤åÏûÑ Ï¢ÖÎ£å!" << endl;
            break;
        } else {
            cout << "ÏûòÎ™ªÎêú ÏûÖÎ†•ÏûÖÎãàÎã§!" << endl;
        }
    }
    return 0;
}
